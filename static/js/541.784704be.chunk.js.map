{"version":3,"file":"static/js/541.784704be.chunk.js","mappings":"0TAEMA,EAAU,mCACVC,EAAW,+BAEJC,EAAgB,mCAAG,oGACZC,IAAAA,IAAA,UACbF,EADa,uCAC0BD,IAFd,UAKX,OAJbI,EADwB,QAKtBC,OALsB,sBAMtB,IAAIC,MAAM,8BANY,gCASvBF,EAAIG,MATmB,2CAAH,qDAYhBC,EAAe,mCAAG,WAAMC,GAAN,uFACXN,IAAAA,IAAA,UACbF,EADa,iCACoBD,EADpB,yBAC4CS,IAFjC,UAKV,OAJbL,EADuB,QAKrBC,OALqB,sBAMrB,IAAIC,MAAM,8BANW,gCAStBF,EAAIG,MATkB,2CAAH,sDAYfG,EAAe,mCAAG,WAAMC,GAAN,uFACXR,IAAAA,IAAA,UACbF,EADa,kBACKU,EADL,oBACwBX,IAFb,UAKV,OAJbI,EADuB,QAKrBC,OALqB,sBAMrB,IAAIC,MAAM,8BANW,gCAStBF,EAAIG,MATkB,2CAAH,sDAYfK,EAAY,mCAAG,WAAMC,GAAN,uFACRV,IAAAA,IAAA,UACbF,EADa,kBACKY,EADL,4BACgCb,IAFxB,UAKP,OAJbI,EADoB,QAKlBC,OALkB,sBAMlB,IAAIC,MAAM,8BANQ,gCASnBF,EAAIG,MATe,2CAAH,sDAYZO,EAAe,mCAAG,WAAMH,GAAN,uFACXR,IAAAA,IAAA,UACbF,EADa,kBACKU,EADL,4BACgCX,IAFrB,UAKV,OAJbI,EADuB,QAKrBC,OALqB,sBAMrB,IAAIC,MAAM,8BANW,gCAStBF,EAAIG,MATkB,2CAAH,qD,gFCH5B,UA7Ca,WACX,OAAkCQ,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAJAE,EAAAA,EAAAA,YAAU,YACRR,EAAAA,EAAAA,IAAaM,GAASG,MAAK,SAAAC,GAAK,OAAIL,EAAaK,EAAMC,KAAvB,GACjC,GAAE,CAACL,IAEGF,GAAkC,IAArBA,EAAUQ,QAC5B,kFAEA,wBACGR,EAAUS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAenB,EAApC,EAAoCA,KAAMoB,EAA1C,EAA0CA,UAA1C,OACb,2BACE,gBACEC,IACEH,EAAY,yCAC0BA,GAfhD,uKAkBQI,IAAKH,KAEP,wBAAKnB,KACL,uCAAeoB,OAVRH,EADI,KAgBpB,C","sources":["api/moviesApi.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '2951025ecfa7eb766855c73351b1b83e';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getPopularMovies = async () => {\n  const res = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  if (res.status !== 200) {\n    throw new Error('Nothing Found ü§∑');\n  }\n\n  return res.data;\n};\n\nexport const getSearchMovies = async name => {\n  const res = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&page=1&query=${name}`\n  );\n\n  if (res.status !== 200) {\n    throw new Error('Nothing Found ü§∑');\n  }\n\n  return res.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n\n  if (res.status !== 200) {\n    throw new Error('Nothing Found ü§∑');\n  }\n\n  return res.data;\n};\n\nexport const getMovieCast = async movieID => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${movieID}/credits?api_key=${API_KEY}`\n  );\n\n  if (res.status !== 200) {\n    throw new Error('Nothing Found ü§∑');\n  }\n\n  return res.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const res = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n\n  if (res.status !== 200) {\n    throw new Error('Nothing Found ü§∑');\n  }\n\n  return res.data;\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'api/moviesApi';\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieid } = useParams();\n\n  const defaultImage =\n    'https://media.istockphoto.com/vectors/no-image-available-icon-vector-id1216251206?b=1&k=20&m=1216251206&s=170667a&w=0&h=z0hxu_BaI_tuMjMneE_APbnx_-R2KGPXgDjdwLw5W7o=';\n\n  useEffect(() => {\n    getMovieCast(movieid).then(movie => setMovieCast(movie.cast));\n  }, [movieid]);\n\n  return movieCast && movieCast.length === 0 ? (\n    <p>There is no cast information ü§∑üèª</p>\n  ) : (\n    <ul>\n      {movieCast.map(({ id, profile_path, original_name, name, character }) => (\n        <li key={id}>\n          <img\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                : defaultImage\n            }\n            alt={original_name}\n          />\n          <h3>{name}</h3>\n          <p>Character: {character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nCast.propTypes = {\n  movieCast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string.isRequired,\n      original_name: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Cast;\n"],"names":["API_KEY","BASE_URL","getPopularMovies","axios","res","status","Error","data","getSearchMovies","name","getMovieDetails","movieId","getMovieCast","movieID","getMovieReviews","useState","movieCast","setMovieCast","movieid","useParams","useEffect","then","movie","cast","length","map","id","profile_path","original_name","character","src","alt"],"sourceRoot":""}